-- *** DO NOT EDIT! ***
-- This module is generated by `just generate-options`

module JS.Intl.Options.Collation
  ( Collation(..)
  , fromString
  , toString
  ) where

import Prelude

import Data.Maybe (Maybe(..))

data Collation
  = Default
  | Compat
  | Dict
  | Emoji
  | Eor
  | Phonebk
  | Phonetic
  | Pinyin
  | Searchji
  | Stroke
  | Trad
  | Zhuyin

derive instance Eq Collation

toString :: Collation -> String
toString = case _ of
  Default -> "default"
  Compat -> "compat"
  Dict -> "dict"
  Emoji -> "emoji"
  Eor -> "eor"
  Phonebk -> "phonebk"
  Phonetic -> "phonetic"
  Pinyin -> "pinyin"
  Searchji -> "searchji"
  Stroke -> "stroke"
  Trad -> "trad"
  Zhuyin -> "zhuyin"

fromString :: String -> Maybe Collation
fromString = case _ of
  "default" -> Just Default
  "compat" -> Just Compat
  "dict" -> Just Dict
  "emoji" -> Just Emoji
  "eor" -> Just Eor
  "phonebk" -> Just Phonebk
  "phonetic" -> Just Phonetic
  "pinyin" -> Just Pinyin
  "searchji" -> Just Searchji
  "stroke" -> Just Stroke
  "trad" -> Just Trad
  "zhuyin" -> Just Zhuyin
  _ -> Nothing
