-- *** DO NOT EDIT! ***
-- This module is generated by `just generate-options`

module JS.Intl.Options.CurrencyDisplay
  ( CurrencyDisplay(..)
  , fromString
  , toString
  ) where

import Prelude

import Data.Maybe (Maybe(..))

data CurrencyDisplay
  = Code
  | Symbol
  | NarrowSymbol
  | Name

derive instance Eq CurrencyDisplay

toString :: CurrencyDisplay -> String
toString = case _ of
  Code -> "code"
  Symbol -> "symbol"
  NarrowSymbol -> "narrowSymbol"
  Name -> "name"

fromString :: String -> Maybe CurrencyDisplay
fromString = case _ of
  "code" -> Just Code
  "symbol" -> Just Symbol
  "narrowSymbol" -> Just NarrowSymbol
  "name" -> Just Name
  _ -> Nothing
